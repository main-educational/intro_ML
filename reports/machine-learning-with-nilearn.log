Traceback (most recent call last):
  File "/home/pbellec/env/intro_ML_test/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/home/pbellec/env/intro_ML_test/lib/python3.8/site-packages/nbclient/client.py", line 1093, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/pbellec/env/intro_ML_test/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/pbellec/env/intro_ML_test/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/home/pbellec/env/intro_ML_test/lib/python3.8/site-packages/nbclient/client.py", line 559, in async_execute
    await self.async_execute_cell(
  File "/home/pbellec/env/intro_ML_test/lib/python3.8/site-packages/nbclient/client.py", line 854, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/home/pbellec/env/intro_ML_test/lib/python3.8/site-packages/nbclient/client.py", line 756, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from sklearn.model_selection import train_test_split

# Split the sample to training/test and
# stratify by age class, and also shuffle the data.

X_train, X_test, y_train, y_test = train_test_split(
                                                    X_features, # x
                                                    y_ageclass, # y
                                                    test_size = 0.2, # 80%/20% split  
                                                    shuffle = True, # shuffle dataset
                                                                    # before splitting
                                                    stratify = y_ageclass, # keep
                                                                           # distribution
                                                                           # of ageclass
                                                                           # consistent
                                                                           # betw. train
                                                                           # & test sets.
                                                    random_state = 123 # same shuffle each
                                                                       # time
                                                                       )

# print the size of our training and test groups
print('training:', len(X_train),
     'testing:', len(X_test))
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
[0;32m/tmp/ipykernel_10829/1607328711.py[0m in [0;36m<module>[0;34m[0m
[1;32m      4[0m [0;31m# stratify by age class, and also shuffle the data.[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m      5[0m [0;34m[0m[0m
[0;32m----> 6[0;31m X_train, X_test, y_train, y_test = train_test_split(
[0m[1;32m      7[0m                                                     [0mX_features[0m[0;34m,[0m [0;31m# x[0m[0;34m[0m[0;34m[0m[0m
[1;32m      8[0m                                                     [0my_ageclass[0m[0;34m,[0m [0;31m# y[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/env/intro_ML_test/lib/python3.8/site-packages/sklearn/model_selection/_split.py[0m in [0;36mtrain_test_split[0;34m(test_size, train_size, random_state, shuffle, stratify, *arrays)[0m
[1;32m   2417[0m         [0;32mraise[0m [0mValueError[0m[0;34m([0m[0;34m"At least one array required as input"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   2418[0m [0;34m[0m[0m
[0;32m-> 2419[0;31m     [0marrays[0m [0;34m=[0m [0mindexable[0m[0;34m([0m[0;34m*[0m[0marrays[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   2420[0m [0;34m[0m[0m
[1;32m   2421[0m     [0mn_samples[0m [0;34m=[0m [0m_num_samples[0m[0;34m([0m[0marrays[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/env/intro_ML_test/lib/python3.8/site-packages/sklearn/utils/validation.py[0m in [0;36mindexable[0;34m(*iterables)[0m
[1;32m    368[0m     """
[1;32m    369[0m     [0mresult[0m [0;34m=[0m [0;34m[[0m[0m_make_indexable[0m[0;34m([0m[0mX[0m[0;34m)[0m [0;32mfor[0m [0mX[0m [0;32min[0m [0miterables[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 370[0;31m     [0mcheck_consistent_length[0m[0;34m([0m[0;34m*[0m[0mresult[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    371[0m     [0;32mreturn[0m [0mresult[0m[0;34m[0m[0;34m[0m[0m
[1;32m    372[0m [0;34m[0m[0m

[0;32m~/env/intro_ML_test/lib/python3.8/site-packages/sklearn/utils/validation.py[0m in [0;36mcheck_consistent_length[0;34m(*arrays)[0m
[1;32m    329[0m     [0muniques[0m [0;34m=[0m [0mnp[0m[0;34m.[0m[0munique[0m[0;34m([0m[0mlengths[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    330[0m     [0;32mif[0m [0mlen[0m[0;34m([0m[0muniques[0m[0;34m)[0m [0;34m>[0m [0;36m1[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 331[0;31m         raise ValueError(
[0m[1;32m    332[0m             [0;34m"Found input variables with inconsistent numbers of samples: %r"[0m[0;34m[0m[0;34m[0m[0m
[1;32m    333[0m             [0;34m%[0m [0;34m[[0m[0mint[0m[0;34m([0m[0ml[0m[0;34m)[0m [0;32mfor[0m [0ml[0m [0;32min[0m [0mlengths[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m

[0;31mValueError[0m: Found input variables with inconsistent numbers of samples: [64, 155]
ValueError: Found input variables with inconsistent numbers of samples: [64, 155]

